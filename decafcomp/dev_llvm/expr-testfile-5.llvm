; ModuleID = 'Test'
source_filename = "DecafComp"

declare void @print_int(i32)

define i32 @main() {
func:
  %x = alloca i1, align 1
  store i1 false, ptr %x, align 1
  %y = alloca i1, align 1
  store i1 false, ptr %y, align 1
  %z = alloca i1, align 1
  store i1 false, ptr %z, align 1
  store i1 true, ptr %x, align 1
  store i1 true, ptr %y, align 1
  %x1 = load i1, ptr %x, align 1
  br i1 %x1, label %noskct, label %skctend

noskct:                                           ; preds = %func
  %y2 = load i1, ptr %y, align 1
  %andtmp = and i1 %x1, %y2
  br label %skctend

skctend:                                          ; preds = %noskct, %func
  %phival = phi i1 [ %x1, %func ], [ %andtmp, %noskct ]
  store i1 %phival, ptr %z, align 1
  br label %if

if:                                               ; preds = %skctend
  br i1 true, label %true, label %false

true:                                             ; preds = %if
  %z3 = load i1, ptr %z, align 1
  %zexttmp = zext i1 %z3 to i32
  call void @print_int(i32 %zexttmp)
  br label %false

false:                                            ; preds = %true, %if
  ret i32 0
}
