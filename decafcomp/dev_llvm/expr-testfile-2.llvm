; ModuleID = 'Test'
source_filename = "DecafComp"

declare void @print_int(i32)

define i32 @main() {
func:
  %x = alloca i32, align 4
  store i32 0, ptr %x, align 4
  %y = alloca i1, align 1
  store i1 false, ptr %y, align 1
  %z = alloca i1, align 1
  store i1 false, ptr %z, align 1
  store i32 958, ptr %x, align 4
  %x1 = load i32, ptr %x, align 4
  %negtmp = sub i32 0, %x1
  store i32 %negtmp, ptr %x, align 4
  store i1 true, ptr %y, align 1
  store i1 false, ptr %z, align 1
  br i1 true, label %noskct, label %skctend

noskct:                                           ; preds = %func
  %y2 = load i1, ptr %y, align 1
  %andtmp = and i1 true, %y2
  br label %skctend

skctend:                                          ; preds = %noskct, %func
  %phival = phi i1 [ true, %func ], [ %andtmp, %noskct ]
  br i1 %phival, label %skctend4, label %noskct3

noskct3:                                          ; preds = %skctend
  %z5 = load i1, ptr %z, align 1
  %ortmp = or i1 %phival, %z5
  br label %skctend4

skctend4:                                         ; preds = %noskct3, %skctend
  %phival6 = phi i1 [ %phival, %skctend ], [ %ortmp, %noskct3 ]
  store i1 %phival6, ptr %y, align 1
  %x7 = load i32, ptr %x, align 4
  %negtmp8 = sub i32 0, %x7
  call void @print_int(i32 %negtmp8)
  ret i32 0
}
