; ModuleID = 'Limits'
source_filename = "DecafComp"

@globalstring = private unnamed_addr constant [2 x i8] c" \00", align 1
@globalstring.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@globalstring.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@globalstring.3 = private unnamed_addr constant [2 x i8] c" \00", align 1
@globalstring.4 = private unnamed_addr constant [2 x i8] c" \00", align 1

declare void @print_string(ptr)

declare void @print_int(i32)

define i32 @main() {
func:
  %x = alloca i32, align 4
  store i32 0, ptr %x, align 4
  store i32 2147483647, ptr %x, align 4
  %x1 = load i32, ptr %x, align 4
  call void @print_int(i32 %x1)
  call void @print_string(ptr @globalstring)
  %x2 = load i32, ptr %x, align 4
  %addtmp = add i32 %x2, 1
  store i32 %addtmp, ptr %x, align 4
  %x3 = load i32, ptr %x, align 4
  call void @print_int(i32 %x3)
  call void @print_string(ptr @globalstring.1)
  store i32 -2147483648, ptr %x, align 4
  %x4 = load i32, ptr %x, align 4
  call void @print_int(i32 %x4)
  call void @print_string(ptr @globalstring.2)
  store i32 -2147483648, ptr %x, align 4
  %x5 = load i32, ptr %x, align 4
  call void @print_int(i32 %x5)
  call void @print_string(ptr @globalstring.3)
  %x6 = load i32, ptr %x, align 4
  %lshrtmp = lshr i32 %x6, 31
  store i32 %lshrtmp, ptr %x, align 4
  %x7 = load i32, ptr %x, align 4
  call void @print_int(i32 %x7)
  call void @print_string(ptr @globalstring.4)
  ret i32 0
}
