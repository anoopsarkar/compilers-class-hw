; ModuleID = 'TF'
source_filename = "DecafComp"

@TF = global [32 x i32] zeroinitializer
@globalstring = private unnamed_addr constant [7 x i8] c"hello\0A\00", align 1

declare void @print_string(ptr)

declare void @print_int(i32)

define i32 @main() {
func:
  call void @print_string(ptr @globalstring)
  br label %if

if:                                               ; preds = %func
  br i1 false, label %true, label %else

true:                                             ; preds = %if
  ret i32 0

false:                                            ; preds = %unreachable1, %unreachable
  %x = alloca i32, align 4
  store i32 0, ptr %x, align 4
  store i32 3, ptr %x, align 4
  %x2 = load i32, ptr %x, align 4
  %subtmp = sub i32 %x2, 32
  store i32 %subtmp, ptr %x, align 4
  %arrayval = load i32, ptr @TF, align 4
  %addtmp = add i32 %arrayval, 3
  store i32 %addtmp, ptr @TF, align 4
  %arrayval3 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @TF, i32 0, i32 1), align 4
  %divtmp = sdiv i32 %arrayval3, 6
  store i32 %divtmp, ptr getelementptr inbounds ([32 x i32], ptr @TF, i32 0, i32 1), align 4
  %arrayval4 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @TF, i32 0, i32 2), align 4
  %modtmp = srem i32 %arrayval4, 3
  store i32 %modtmp, ptr getelementptr inbounds ([32 x i32], ptr @TF, i32 0, i32 2), align 4
  %x5 = load i32, ptr %x, align 4
  %arrayval6 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @TF, i32 0, i32 2), align 4
  %modtmp7 = srem i32 %x5, %arrayval6
  store i32 %modtmp7, ptr getelementptr inbounds ([32 x i32], ptr @TF, i32 0, i32 6), align 4
  ret i32 0

else:                                             ; preds = %if
  ret i32 0

unreachable:                                      ; No predecessors!
  br label %false

unreachable1:                                     ; No predecessors!
  br label %false
}
