; ModuleID = 'Test'
source_filename = "DecafComp"

declare void @print_int(i32)

define i32 @main() {
func:
  %x = alloca i32, align 4
  store i32 0, ptr %x, align 4
  %y = alloca i32, align 4
  store i32 0, ptr %y, align 4
  store i32 1, ptr %x, align 4
  store i32 100, ptr %y, align 4
  %x1 = load i32, ptr %x, align 4
  call void @print_int(i32 %x1)
  %y2 = load i32, ptr %y, align 4
  call void @print_int(i32 %y2)
  %x3 = alloca i32, align 4
  store i32 0, ptr %x3, align 4
  store i32 2, ptr %x3, align 4
  %x4 = load i32, ptr %x3, align 4
  call void @print_int(i32 %x4)
  %y5 = load i32, ptr %y, align 4
  call void @print_int(i32 %y5)
  %x6 = alloca i32, align 4
  store i32 0, ptr %x6, align 4
  store i32 3, ptr %x6, align 4
  %x7 = load i32, ptr %x6, align 4
  call void @print_int(i32 %x7)
  %y8 = load i32, ptr %y, align 4
  call void @print_int(i32 %y8)
  %x9 = alloca i32, align 4
  store i32 0, ptr %x9, align 4
  store i32 4, ptr %x9, align 4
  %x10 = load i32, ptr %x9, align 4
  call void @print_int(i32 %x10)
  %y11 = load i32, ptr %y, align 4
  call void @print_int(i32 %y11)
  %x12 = alloca i32, align 4
  store i32 0, ptr %x12, align 4
  store i32 5, ptr %x12, align 4
  %x13 = load i32, ptr %x12, align 4
  call void @print_int(i32 %x13)
  %y14 = load i32, ptr %y, align 4
  call void @print_int(i32 %y14)
  ret i32 0
}
